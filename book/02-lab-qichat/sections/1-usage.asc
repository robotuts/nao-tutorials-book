==== Применение

===== Создание диалога

* Сперва нужно запустить _Choregraphe_ и подключить к ней робота, как было описано в предыдущей лабораторной, при помощи кнопки btn:[connect to] [image:btn/connect.png[Connect]].
* Затем в меню, появляющемуся по правому клику по пустому серому полю панели блок-схем, выберите menu:Create new box[Dialog...].

image::screenshots/lab2-create-dialog.png[CreateDialog]

* В появившемся окне кликните по кнопке btn:[Add a new topic], где в `Name` напишите название диалога без пробелов, например, `HelloWorld`. Также там можно выбрать язык, однако следует учитывать, что на роботе одновременно установлено только два языка, а не все, которые есть в списке. Затем нажмите на кнопку btn:[Add] и btn:[OK].

image::screenshots/lab2-specify-topic.png[SpecifyTopic]

* Соедините иконку созданного диалога со входом программы или предыдущими заданными действиями (например, `Set language` для переключения языка).
* На панели контента проекта (_Project content_) дважды кликните по файлу `HelloWorld_enu.top`, чтобы открыть его в редакторе скриптов (_Script editor_). Можно увидеть, что в скрипте уже заполнены первые две строки его названием и языком.
* Для примера напечатайте следующие правила:

[source,qichat]
----
u:(Hello) Hello, young Padawan
u:(Good morning) Let's start a wonderful day
----

Интерфес программы должен выглядеть примерно как на рисунке ниже:

image::screenshots/lab2-app-example.png[AppExample]

* Запустите программу кнопкой image:btn.play.png[Play] btn:[Play].

После этого звуком и анимацией лампочек в "глазах" робот предложит Вам сказать что-либо.

* Скажите `Good morning` напротив него или введите те же слова в _Dialog panel_ и затем нажмите kbd:[enter]. Робот ответит `Let's start a wonderful day`
* Скажите (или напишите) роботу `Hello`, он должен ответить `Hello, young Padawan`.

=====  Синонимичные конструкции

* Чтобы сделать более комплексное правило, можно  изменить скрипт следующим образом:

[source,qichat]
----
u:([hi hello wassup]) hello young padawan
u:(["tell me" "give me"] your name) of course, my name is NAO
----

В квадратных скобках указываются взаимозаменяемые фразы или слова, на которые робот реагирует одинаково. Если использовать такую конструкцию в *ответе робота*, то он будет высказывать написанные фразы (слова) последовательно при каждой активации правила.

===== Объединение скрипта и анимации

* Создайте новые правила:

[source,qichat]
----
u:(["can you" please] sit down {now}) ok i sit down $sit=1
u:(["can you" please] stand up {now}) ok i stand up $standup=1
----

В фигурных скобках обозначено необязателньое слово, которое можно произнести или нет.

* Добавте два _выхода_ [image:screenshots/onstopped.png[OnStopped]] к блоку _Hello world_ (кликнуть правой кнопкой мыши по уже имеющемуся выходу блока и выбрать там `Add output`).

image::screenshots/lab2-add-output.png[AddOutput]

Выходам нужно задать отдельные названия (по умолчанию они назваются `output`)

* `sit`
* `stand up`

image::screenshots/lab2-specify-output.png[SpecifyOutput]

////
‼ я не знаю зачем следующий пункт надо проверить что он точно нужен ‼
* Добавьте 2 блока **Flow Control > Time > Wait** (вкладка **standard** в **Box libraries**) и соедините их с созданными выходами

* Добавьте на поле и присоедините к соответствующим выходам блоки **Motions > Sit Down** и  **Motions > Stand Up** (вкладка **standard** в **Box libraries**). Чтобы программа внезапно не прерывалась, выходы блоков анимации лучше присоединить ко входу блока со скриптом. Должно получиться следующее:

![](assets/img/6.PNG)

‼ ИЛИ ‼

![](assets/img/7.PNG)

В результате запуска программы робот должен садиться и вставать в ответ на сказанное веловеком.
////

### Переключение между несколькими темами

* Создайте два отдельных блока **Dialog topic** с названиями **Food** и **Sport** и следующим содержимым:

[source,qichat]
----
topic: ~Food()
language: enu
u:(let's talk about food) OK, guess what I like
u:^private(do you like fish) yes and sea food too
u:^private(do you like meat) no, I don't
----

[source,qichat]
----
topic: ~Sport()
language: enu
u:(let's talk about sport) OK, guess what sport I like
u:^private(do you like tennis) no, I can't play tennis
u:^private(do you like yoga) yes, would you like to do yoga with me?
----

* Подключите их к одному **выходу** ![](assets/img/output_onstopped.png) предыдущего блока или **входу** ![](assets/img/input_onstart.png) **скрипта**.

![](assets/img/8.PNG)

После запуска робот будет вести разговор на одну тему, пока вы не попросите его говорить о другой.

Для перехода из одной темы в другую и фокусировки на ней используются пользовательские правила; в данном примере **"Let’s talk about food"** и **"Let’s talk about sport"**.
Когда тема находится в фокусе
* активируются все её **приватные правила**, ( **^private** ),
* в то время как деактивируются **приватные правила** другой темы.
